[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "canza-platform"
version = "0.1.0"
description = "Canza Autonomous Payment Protocol - AI-powered cross-border payment platform"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Canza Team", email = "team@canza.com"}
]
keywords = ["payments", "ai", "blockchain", "africa", "cross-border", "autonomous-agents"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"

# Shared dependencies for the entire workspace
dependencies = [
    # Core Framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # Database
    "sqlalchemy[asyncio]>=2.0.0",
    "greenlet>=2.0.0",
    "asyncpg>=0.29.0",
    "redis>=5.0.0",
    
    # HTTP Client
    "aiohttp>=3.9.0",
    "httpx>=0.25.0",
    
    # Data Processing
    "numpy>=1.25.0",
    "pandas>=2.1.0",
    "scikit-learn>=1.3.0",
    
    # Multi-currency Support
    "forex-python>=1.8",
    "python-money>=0.5",
    
    # Security & Authentication
    "cryptography>=45.0.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.0",
    
    # Logging & Monitoring
    "structlog>=23.2.0",
    "prometheus-client>=0.19.0",
    
    # Utilities
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
    "rich>=13.7.0",
    
    # Geographic & Currency Data
    "pycountry>=23.12.0",
    "geopy>=2.4.0",
    
    # Rate Limiting
    "slowapi>=0.1.9",
    
    # Health Checks
    "healthcheck>=1.3.3",
]

[project.optional-dependencies]
# Development dependencies shared across the workspace
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
]

# Documentation dependencies
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
    "mkdocs-autorefs>=0.4.0",
]

# Testing dependencies
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "pytest-benchmark>=4.0.0",
]

# Production dependencies
prod = [
    "gunicorn>=21.0.0",
    "uvloop>=0.19.0",
]

[project.urls]
Homepage = "https://github.com/canza/canza-platform"
Documentation = "https://docs.canza.com"
Repository = "https://github.com/canza/canza-platform"
"Bug Tracker" = "https://github.com/canza/canza-platform/issues"

[project.scripts]
capp = "applications.capp.main:main"
canza-sdk = "sdk.canza_agents.framework:main"

# Workspace configuration
[tool.hatch.workspace]
packages = [
    "packages/core",
    "packages/integrations",
    "packages/utils", 
    "sdk/canza_agents",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["canza_agents", "capp", "packages"]

# mypy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "packages.core.*",
    "packages.integrations.*", 
    "packages.utils.*",
    "sdk.canza_agents.*",
    "applications.capp.*",
]
disallow_untyped_defs = false

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "packages/core/tests",
    "packages/integrations/tests",
    "packages/utils/tests", 
    "sdk/canza_agents/tests",
    "applications/capp/tests",
    "examples/*/tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = [
    "packages/core",
    "packages/integrations",
    "packages/utils",
    "sdk/canza_agents",
    "applications/capp",
]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 